<?php
namespace app\controllers;

use app\common\services\LogService;
use app\models\wechat\ChannelChatWait;
use Yii;
use yii\db\Exception;
use yii\web\Controller;
use app\common\widgets\Queue;
use app\common\widgets\TemplateBuilder;
use app\common\logics\channel\ChannelLogic;
use app\models\ContactForm;
use app\models\SalesChannel;
use app\models\WechatClass;
use app\models\UserShare;
use app\models\WechatLog;
use app\models\wechat\ChannelChatMessagePre;
use app\models\UserInitBean;
use app\models\ClassRoom;

use app\common\logics\chat\ChatLogic;
use app\common\logics\course\ClassLogic;

class LiveController extends Controller
{
    /** @var  \app\common\logics\channel\ChannelLogic.php  $channelServer */
    private $channelServer;
    /** @var  \app\common\logics\chat\ChatLogic.php  $chatServer */
    private $chatServer;
    /** @var  \app\common\logics\course\ClassLogic  $classServer */
    private $classServer;

    protected $logid = '0';

    public function init()
    {
        $this->chatServer = new ChatLogic();
        $this->classServer = new ClassLogic();
        $this->channelServer = new ChannelLogic();
        parent::init();
    }

    /**操作开始前调用
     * @param \yii\base\Action $action
     * @return bool|void
     * create by wangke
     */
    public function beforeAction($action)
    {
        $param = array(
            'actionSharePage',
            'actionClassDown',
            'actionMissionReward',
//            'actionLiveBack',
        );

        if (!in_array($action->actionMethod, $param)) {
            if (empty(Yii::$app->session->get('openid')) && Yii::$app->request->isGet) {
                $url = '/site/login?returnUrl=' . Yii::$app->request->absoluteUrl;
                return $this->redirect($url)->send();
            }
        }

        if (Yii::$app->request->isPost) {
            $this->logid = LogService::inputLog(Yii::$app->request);
        }

        $this->enableCsrfValidation = false;
        return parent::beforeAction($action);
    }

    /**
     * 操作开始后调用
     * @param \yii\base\Action $action
     * @param mixed $result
     * @return mixed
     * create by wangke
     */
    public function afterAction($action, $result)
    {
        if (!empty($this->logid)) {
            LogService::outputLog($this->logid, $result);
        }

        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }

    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }

    /*
     * 最近直播页面
     * create by sjy 2017-02-17
     * 
     */

    public function actionRecentlyLive($page = 0)
    {
        $openid = Yii::$app->session->get('openid');
        //获取用户已经分享获得权限的视频id
        $mysql = "SELECT class_id FROM user_share WHERE open_id = :open_id ";
        $mycoursedata = Yii::$app->db->createCommand($mysql)
            ->bindValues([':open_id' => $openid])
            ->queryColumn();
        //获取最近直播列表
        $todaytime = strtotime(date("Y-m-d 00:00:00", time()));
        $data = WechatClass::find()
            ->select('id,banner_img')
            ->where('is_disable = 0 AND is_back = 0 AND is_delete = 0 AND class_time >= :class_time', [
                ':class_time' => $todaytime
            ])
            ->orderBy('is_top desc,class_time asc')
            ->offset($page)
            ->limit(10)
            ->asArray()
            ->all();

        for ($i = 0; $i < count($data); $i++) {
            $data[$i]["banner_img"] = Yii::$app->params['address_static'] . $data[$i]["banner_img"];
            //判断用户是否有预约过视频
            $data[$i]["isbook"] = in_array($data[$i]["id"], $mycoursedata) ? 1 : 0;
        }
        return empty($page) ? $this->render('recentlylive', ['livelist' => $data]) : json_encode($data, JSON_UNESCAPED_SLASHES);
    }

    /*
     * 直播展示页面
     * create by sjy 2017-02-17
     * 
     */

    public function actionLiveShow($classid = 0)
    {
        $openid = Yii::$app->session->get('openid');
        //获取用户头像，（用户）
        $userinfosql = "SELECT head FROM sales_channel WHERE bind_openid = :bind_openid and status = 1 ";
        $userinfo = Yii::$app->db->createCommand($userinfosql)
            ->bindValues([':bind_openid' => (string)$openid])
            ->queryOne();
        if (empty($userinfo["head"])) {
            $userinfo["head"] = Yii::$app->params['base_url'] . '/images/share.png';
        }
        $userinfo["openid"] = $openid;

        //获取课程信息
        $courseinfo = WechatClass::find()
            ->select('id,title,url,class_time,banner_img,poster,content')
            ->where(['id' => $classid])
            ->asArray()
            ->one();
        if (empty($courseinfo)) {
            return $this->redirect('/live/class-down');
        }
        $courseinfo["inter"] = ($courseinfo["class_time"] - time()) < 900 ? 1 : 0;
        $courseinfo["banner_img"] = Yii::$app->params['address_static'] . $courseinfo["banner_img"];
        $courseinfo["content"] = Yii::$app->params['address_static'] . $courseinfo["content"];

        $sqldata = UserShare::find()
            ->select('open_id')
            ->where('class_id = :class_id', [
                ':class_id' => $classid
            ])
            ->orderBy('share_time desc')
            ->limit(3)
            ->asArray()
            ->all();

        $shuju = '';
        for ($i = 0; $i < count($sqldata); $i++) {
            $shuju .= "'" . $sqldata[$i]["open_id"] . "',";
        }
        $shuju = substr($shuju, 0, strlen($shuju) - 1);

        $renqidata = UserShare::find()
            ->alias("us")
            ->leftJoin("sales_channel as sc", "sc.bind_openid = us.open_id")
            ->select('us.share_time,sc.wechat_name,sc.head')
            ->where('us.class_id = :class_id and sc.status = 1 ', [
                ':class_id' => $classid
            ]);
        $renqidata->andWhere(empty($sqldata) ? 'us.open_id = -1 ' : ' us.open_id in (' . $shuju . ')');
        $renqiData = $renqidata
            ->orderBy('share_time desc')
            ->asArray()
            ->all();

        $renqi = UserShare::find()
            ->select("open_id")
            ->where("class_id = :class_id", [
                ':class_id' => $classid
            ])
            ->asArray()
            ->column();

        $renqicount = count($renqi);
        if ($renqicount > 10000) {
            $renqicount = ($renqicount / 10000) . "万";
        }

        $isinter = 0;
        if (in_array($openid, $renqi)) {
            $isinter = 1;
        }
        //获取
        $add = Yii::$app->params['base_url'];
        $add = json_encode($add, JSON_UNESCAPED_SLASHES);

        return $this->render('liveshow', [
            'add' => $add,
            'isinter' => $isinter,
            'courseinfo' => $courseinfo,
            'renqicount' => $renqicount,
            'userinfo' => $userinfo,
            'renqiData' => $renqiData
        ]);
    }

    /*
     * 课程下架页面
     * create by sjy
     */
    public function actionClassDown()
    {
        return $this->render('classdown');
    }

    /*
     * create by sjy 
     * 加载人气列表
     */

    public function actionRenqi($classid = 0, $page = 0)
    {
        //获取本节课信息
        $sqldata = UserShare::find()
            ->select('open_id')
            ->where('class_id = :class_id', [
                ':class_id' => $classid
            ])
            ->orderBy('share_time desc')
            ->offset($page)
            ->limit(12)
            ->asArray()
            ->all();

        $shuju = '';
        for ($i = 0; $i < count($sqldata); $i++) {
            $shuju .= "'" . $sqldata[$i]["open_id"] . "',";
        }
        $shuju = substr($shuju, 0, strlen($shuju) - 1);

        $renqidata = UserShare::find()
            ->alias("us")
            ->leftJoin("sales_channel as sc", "sc.bind_openid = us.open_id")
            ->select('us.share_time,sc.wechat_name,sc.head')
            ->where('us.class_id = :class_id and sc.status = 1 ', [
                ':class_id' => $classid
            ]);
        $renqidata->andWhere(empty($sqldata) ? 'us.open_id = -1 ' : ' us.open_id in (' . $shuju . ')');
        $renqi = $renqidata
            ->orderBy('share_time desc')
            ->asArray()
            ->all();

        $time = time();
        for ($i = 0; $i < count($renqi); $i++) {
            if (empty($renqi[$i]["head"])) {
                $renqi[$i]["head"] = '/images/moren.png';
            }
            if (mb_strlen($renqi[$i]["wechat_name"], "UTF8") > 10) {
                $renqi[$i]["wechat_name"] = mb_substr($renqi[$i]["wechat_name"], 0, 10, 'utf-8') . '....';
            }
            $timecha = $time - $renqi[$i]["share_time"];
            if ($timecha < 60) {
                $renqi[$i]["share_time"] = $timecha . "秒";
            } else if ($timecha < 3600) {
                $renqi[$i]["share_time"] = floor(($timecha / 60)) . "分钟";
            } else if ($timecha < 86400) {
                $renqi[$i]["share_time"] = floor(($timecha / 3600)) . "小时";
            } else {
                $renqi[$i]["share_time"] = floor(($timecha / 86400)) . "天";
            }
        }
        if (empty($page)) {
            $datacont = UserShare::find()
                ->select('id')
                ->where('class_id = :class_id', [
                    ':class_id' => $classid
                ])
                ->asArray()
                ->all();

            $count = count($datacont);

            return $this->render('renqi', [
                'count' => $count,
                'renqi' => $renqi,
                'class_id' => $classid
            ]);
        } else {
            return json_encode($renqi, JSON_UNESCAPED_SLASHES);
        }
    }

    /*
     * 课程回顾页面
     * create by sjy 2017-02-17
     * 
     */

    public function actionLiveBack($page = 0, $classifyid = 0)
    {
        $data = $this->classServer->getLiveBack($page, $classifyid);
       
        //判断是不是第一页
        if (empty($page)) {
            return $this->render('liveback', [
                'backlist' => $data["data"],
                'classify' => $data["classify"],
                'classifycount' => $data["classifycount"]
            ]);
        } else {
             return json_encode($data["data"], JSON_UNESCAPED_SLASHES);
        }
    }

    /*
     * student 自定义分享页面
     * create by sjy 04-10
     */

    public function actionSharePage($classid = 0, $openid = 0)
    {
        //获取用户个人信息
        $userinfo = SalesChannel::find()
            ->select('id,wechat_name,head')
            ->where('bind_openid= :openid', [
                ':openid' => $openid
            ])
            ->asArray()
            ->one();
        //获取课程信息
        $course = WechatClass::find()
            ->select('title,poster,is_back')
            ->where('id = :id', [
                ':id' => $classid
            ])
            ->asArray()
            ->one();
        if (!empty($course)) {
            $course["poster"] = Yii::$app->params['address_static'] . $course["poster"];
            if (mb_strlen($course["title"], "UTF8") > 20) {
                $course["title"] = mb_substr($course["title"], 0, 20, 'utf-8') . '....';
            }
        } else {
            return $this->redirect('/live/class-down');
        }

        $id = UserShare::find()
            ->select('id')
            ->where('class_id = :class_id and open_id = :open_id ', [
                ':class_id' => $classid,
                ':open_id' => $openid
            ])
            ->asArray()
            ->one();
        if (empty($id)) {
            $time = time();
            $sql = new UserShare();
            $sql->class_id = $classid;
            $sql->open_id = $openid;
            $sql->user_id = $userinfo["id"];
            $sql->share_time = $time;
            $sql->is_back_share = $course['is_back'];
            $sql->save();

            $id["id"] = Yii::$app->db->getLastInsertID();
        }

        $scene_id = $id["id"];
        //获取用户二维码
        $wechat = Yii::$app->wechat_new;
        $qrcode = $wechat->createQrCode([
            'expire_seconds' => 2592000,
            'action_name' => 'QR_SCENE',
            'action_info' => ['scene' => ['scene_id' => $scene_id]]
        ]);
        $imgRawData = $wechat->getQrCode($qrcode['ticket']);

        return $this->render('sharepage', [
            'userinfo' => $userinfo,
            'course' => $course,
            'imgRawData' => $imgRawData
        ]);
    }

    /*
     * 查看我的课程
     * create by sjy 2017-03-07
     */

    public function actionMyCourse()
    {
        $openid = Yii::$app->session->get('openid');
        //获取我的课程
        $course = $this->classServer->getMyCourse($openid);
        return $this->render('mycourse', ['isBookShare' => $course["recently"], 'isBlackShare' => $course["back"]]);
    }

    /**
     * 查询是否分享成功
     * create by sjy 2017-03-02
     */

    public function actionAddShareRecord($classid = 0)
    {
        $openid = Yii::$app->session->get('openid');
        $userinfo = Yii::$app->session->get('userinfo');
        if (!empty($userinfo)) {
            $wechat_class = $this->classServer->getWechatClassById($classid);
            if ($wechat_class) {
                $user_share = $this->classServer->getUserShareByOpenidAndClassId($openid, $classid);
                if (empty($user_share)) {
                    $result = $this->classServer->saveUserShare($classid, $openid, $wechat_class['is_back'], $userinfo["id"]);
                    if ($result) {
                        $salesChannel = $this->channelServer->getObjSalesChannelByOpenid($openid);
                        $remark = '请您合理安排时间收看我们的课程，直播地址会在课程开始前十五分钟推送给您';
                        if ($salesChannel->auth_time==0) {
                            $salesChannel->auth_time=time();
                            if ($salesChannel->save()) {
                                $remark = '您已经开通直播课程开课以及现金红包活动消息推送，取消通知请发送【TD】';
                            }
                        }
                        if ($wechat_class['is_back'] == 0) {
                            $wechat = Yii::$app->wechat_new;
                            $arr = [
                                'touser' => $openid,
                                'template_id' => Yii::$app->params['order_class_success'],
                                'url' => '',
                                'data' => [
                                    'first' => ['value' => '直播课预约成功', 'color' => '#ff0000'],
                                    'keyword1' => ['value' => '《' . $wechat_class["title"] . '》'."\n"],
                                    'keyword2' => ['value' => date("Y-m-d H:i:s", $wechat_class["class_time"])],
                                    'remark' => ['value' =>"\n".$remark, 'color' => '#ff0000'],
                                ],
                            ];
                            $wechat->sendTemplateMessage($arr);
                        }
                        return 1;
                    }
                } else {
                    return 1;
                }
            }
        }
    }

    /**
     * 点击查看我的分享成果
     *  create by sjy 2017-03-02
     */
    public function actionShowMyHarvest($page = 0)
    {
        $openid = Yii::$app->session->get('openid');
        //获取我的基本信息
        $userinfosql = "select head,username,wechat_name,id  from sales_channel where bind_openid = :bind_openid and sales_channel.status = 1 ";
        $userinfo = Yii::$app->db->createCommand($userinfosql)
            ->bindValues([':bind_openid' => (string)$openid])
            ->queryOne();
        //获取我的提成
        $incomedetailsql = "SELECT studentName,money,comment,status FROM sales_trade "
            . "WHERE is_deleted = 0 AND uid = :uid  AND status NOT IN (3,4,5) AND  money > 0 "
            . " ORDER BY time_created DESC "
            . " limit {$page},10 ";
        $incomedetailinfo = Yii::$app->db->createCommand($incomedetailsql)
            ->bindValues([':uid' => $userinfo["id"]])
            ->queryAll();

        if (empty($incomedetailinfo) && empty($page)) {
            return $this->redirect('/introduce/no-award');
        }

        $incomedetail = [];
        foreach ($incomedetailinfo as $item) {
            if (empty($item["studentName"])) {
                $item["studentName"] = 'VIP微课';
            }
            if (mb_strlen($item["studentName"], "UTF8") > 6) {
                $item["studentName"] = mb_substr($item["studentName"], 0, 6, 'utf-8') . '....';
            }
            if (mb_strlen($item["comment"], "UTF8") > 20) {
                $item["comment"] = mb_substr($item["comment"], 0, 20, 'utf-8') . '....';
            }
            $incomedetail[] = $item;
        }

        //获取全部提成总和
        $totalketixiansql = "SELECT sum(money) FROM sales_trade "
            . "WHERE is_deleted = 0 AND uid = :uid  AND status NOT IN (-1,3,4,5) AND  money > 0";
        $totalketixian = Yii::$app->db->createCommand($totalketixiansql)
            ->bindValues([':uid' => $userinfo["id"]])
            ->queryScalar();

        //获取已经体现金额
        $istixiansql = "SELECT sum(money) FROM sales_trade "
            . "WHERE is_deleted = 0 AND uid = :uid  and status = -1 ";
        $istixian = Yii::$app->db->createCommand($istixiansql)
            ->bindValues([':uid' => $userinfo["id"]])
            ->queryScalar();

        if (empty($totalketixian)) {
            $totalketixian = 0;
        }
        if (empty($istixian)) {
            $istixian = 0;
        }
        //获取可提现金额
        $total = $totalketixian - $istixian;
        $total = floor($total);
        $istixian = floor($istixian);

        //判断是否是第一页
        if (empty($page)) {
            return $this->render('showmyharvest', [
                'incomedetail' => $incomedetail,
                'total' => $total,
                'iscomplete' => $istixian
            ]);
        } else {
            return json_encode($incomedetail, JSON_UNESCAPED_SLASHES);
        }
    }

    /**
     * 点击查看我学生的陪练单
     *  create by sjy 2017-03-06
     */

    public function actionMyStudentCourse()
    {
        $openid = Yii::$app->session->get('openid');

        //获取我的基本信息(id)
        $userinfosql = "select head,username,wechat_name,id  from sales_channel where bind_openid = :bind_openid and sales_channel.status = 1 ";
        $userinfo = Yii::$app->db->createCommand($userinfosql)
            ->bindValues([':bind_openid' => $openid])
            ->queryOne();

        //获取我推荐的学生id
        $mystudentsql = "select id from user where sales_id = :sales_id ";
        $mystudentlist = Yii::$app->db->createCommand($mystudentsql)
            ->bindValues([':sales_id' => $userinfo["id"]])
            ->queryColumn();

        if (empty($mystudentlist)) {
            return $this->redirect('/introduce/no-recommend');
        }

        $studentlist = [];

        if (!empty($mystudentlist)) {
            $studentlistsql = "select MAX(time_class) as time_class ,count(class_room.id)as counts,student_id,nick from class_room "
                . "left join user on user.id = class_room.student_id "
                . "where student_id in (" . implode(",", $mystudentlist) . ") and status = 1 and is_deleted = 0 "
                . " GROUP BY student_id "
                . 'order by time_class desc';
            $studentlist = Yii::$app->db->createCommand($studentlistsql)
                ->queryAll();
        }

        return $this->render('mystudentcourse', ['studentlist' => $studentlist]);
    }

    /**
     * 查看学生详细陪练课单
     *  create by sjy 2017-03-06
     */

    public function actionLookMyStudent($page = 0, $studentid)
    {
        $data = $this->channelServer->lookMyStudent($page, $studentid);
        if (empty($page)) {
            return $this->render('studentdetial', ['courseinfo' => $data['courseinfo'], 'userinfo' => $data['userinfo'], 'count' => $data['count']]);
        } else {
            return json_encode($data['courseinfo'], JSON_UNESCAPED_SLASHES);
        }
    }

    /**
     * 查看学生的某一节课程记录
     */

    public function actionLookClassRecord($classid)
    {
        $sql = "SELECT id FROM class_record WHERE class_id = :class_id ";
        $recordid = Yii::$app->db->createCommand($sql)
            ->bindValues([':class_id' => $classid])
            ->queryOne();

        if (empty($recordid)) {
            return $this->redirect('/site/error-monitor');
        }

        $url = Yii::$app->params['student_url'] . "/class/record-detail?is_student= 0 &record_id=" . $recordid["id"];
        return $this->redirect($url)->send();
    }

    /**
     * 添加反馈记录
     * create by sjy 2017-03-08
     */
    public function actionAddFeedBack($student, $feedback)
    {
        $openid = Yii::$app->session->get('openid');
        $sql = "insert into sales_feedback(uid,openID,studentID,feedback,type,time_created) values(:uid,:openID,:studentID,:feedback,:type,:time_created) ";
        return Yii::$app->db->createCommand($sql)
            ->bindValues([
                ':uid' => $student,
                ':openID' => $openid,
                ':studentID' => $student,
                ':feedback' => $feedback,
                ':type' => 0,
                ':time_created' => time()
            ])->execute();
    }


    /**
     * 用户发送提现话术
     * create by sjy 2017-03-08
     */

    public function actionGetMyMoney()
    {

        $this->chatServer->getMyMoney();
    }

    /**
     * 查看历史体现明细
     */

    public function actionHistoryDetail($historyid)
    {
        $incomedetailsql = "SELECT studentName,money,comment FROM sales_trade WHERE is_deleted = 0 AND history_id = :history_id and status != -1 ";
        $incomedetail = Yii::$app->db->createCommand($incomedetailsql)
            ->bindValues([':history_id' => $historyid])
            ->queryAll();

        return $this->render('historydetail', ['incomedetail' => $incomedetail]);
    }


    /**
     * 活动列表
     * @author Yrxin
     * @param   $date string  [lmonth:上月，默认当月]
     * @DateTime 2017-06-23T18:30:16+0800
     * @return   [type]                   [description]
     */
    public function actionMyActive($date = 0)
    {
        $openid = Yii::$app->session->get('openid');
        $userinfo = Yii::$app->session->get('userinfo');
        if (empty($userinfo)) {
            $result = $this->channelServer->getSalesChannelByOpenid($openid);
            if ($result) {
                Yii::$app->session->set('userinfo', $result);
                $userinfo = $result;
            } else {
                return $this->renderPartial('/site/subscribepage');
            }
        }
        //每月的渠道拉新和学生体验课信息
        $data = $this->channelServer->getInviteNumberOfNowMonthInfo($userinfo, $date);
        return $this->render('my-active', [
            'date' => $date,
            'infos' => $data,
            't_money' => Yii::$app->params['month_teacher_money'],
            't_num_finsh' => Yii::$app->params['month_teacher_num'],
            'ex_min_money' => Yii::$app->params['month_exclass_min_money'],
            'ex_max_money' => Yii::$app->params['month_exclass_max_oney'],
            'ex_num_finish' => Yii::$app->params['month_exclass_num'],
        ]);
    }

    /**
     * 拉新任务发送海报
     * @return int
     * create by wangke
     */
    public function actionMissionPushPoster()
    {
        $openid = Yii::$app->session->get('openid');

        $data = $this->channelServer->pushPoster($openid);
        return $data;
    }

    /**
     * 任务完成抽取奖励(渠道拉新和学生体验课)  返回金额
     * create by wangke
     */
    public function actionMissionReward()
    {
        $type = Yii::$app->request->post('type'); //判断是否是渠道拉新还是体验课
        $date = Yii::$app->request->post('date'); //判断是当月还是上月
        //session
        $openid = Yii::$app->session->get('openid');
        $userinfo = Yii::$app->session->get('userinfo');
        if (empty($userinfo)) {
            $result = $this->channelServer->getSalesChannelByOpenid($openid);
            if ($result) {
                Yii::$app->session->set('userinfo', $result);
                $userinfo = $result;
            } else {
                return json_encode(['error' => '请先关注公众号', 'data' => []]);
            }
        }
        $money = $this->channelServer->getNewChannelMissionRewardMoney($type, $date, $userinfo);
        return $money;
    }

    /*
     * 未上体验课学生名单
     * create by sjy 
     * 2017=08-05
     */
    public function actionLookNoexStudent($saleId = 0, $keyword = 0, $start = 0, $end = 0)
    {
        $list = $this->channelServer->getNoexStudent($saleId, $keyword, $start, $end);
        return $this->render('looknoexstudent', [
            'noex' => $list
        ]);
    }
}
